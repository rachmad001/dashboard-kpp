create table progress(
	id int not null IDENTITY,
	id_pegawai varchar(50) not null,
	ftw bit,
	pcr bit,
	berkas bit,
	temporary bit,
	ddt bit,
	groundtest bit,
	berkas_orientasi bit,
	orientasi bit,
	PRIMARY KEY(id),
	FOREIGN KEY(id_pegawai) REFERENCES pegawai(id)
)

CREATE TABLE ftw(
	id int not null identity primary key,
	id_progress int not null,
	scans varchar(50),
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger ftwtrigger on ftw
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set ftw = @status where id = @id_progress
end

create table pcr (
	id int identity primary key,
	id_progress int,
	tanggal_pengambilan date,
	hasil varchar(10),
	scan_hasil_pcr varchar(100),
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger pcrtrigger on pcr
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set pcr = @status where id = @id_progress
end

CREATE TABLE berkas(
	id INT IDENTITY PRIMARY KEY,
	id_progress int,
	nik VARCHAR(30),
	no_sim VARCHAR(30),
	no_ijazah VARCHAR(30),
	scan_pengajuan_induksi VARCHAR(100),
	scan_hasil_pcr VARCHAR(100),
	scan_ktp VARCHAR(100),
	scan_sim VARCHAR(100),
	scan_ijazah VARCHAR(100),
	scan_mcu VARCHAR(100),
	scan_surat_pernyataan VARCHAR(100),
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger berkastrigger on berkas
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set berkas = @status where id = @id_progress
end

CREATE TABLE induksi(
	id int identity,
	id_progress int,
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger induksitrigger on induksi
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set induksi = @status where id = @id_progress
end

CREATE TABLE temporary(
	id int identity,
	id_progress int,
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger temporarytrigger on temporary
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set temporary = @status where id = @id_progress
end

CREATE TABLE ddt(
	id int identity,
	id_progress int,
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger ddttrigger on ddt
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set ddt = @status where id = @id_progress
end

CREATE TABLE groundtest(
	id int identity,
	id_progress int,
	scan_hasil_groundtest VARCHAR(100),
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger groundtesttrigger on groundtest
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set groundtest = @status where id = @id_progress
end

CREATE TABLE berkas_orientasi(
	id int identity,
	id_progress int,
	scan_hasil_groundtest VARCHAR(100),
	scan_hauling VARCHAR(100),
	scan_simper VARCHAR(100),
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger berkasorientasittrigger on berkas_orientasi
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set berkas_orientasi = @status where id = @id_progress
end

CREATE TABLE orientasi(
	id int identity,
	id_progress int,
	status bit,
	FOREIGN KEY(id_progress) REFERENCES progress(id)
)

create trigger orientasittrigger on orientasi
after update
as
begin
	set nocount on;
	declare @status varchar(50), @id_progress int;
	select @status = ins.status FROM inserted ins;
	select @id_progress = ins.id_progress from inserted ins;
	update progress set orientasi = @status where id = @id_progress
end
